

sugar:

	a b (@ z) : x (@ y) -> a : (b (@ z) : x (@ y))
	a : x b (@ y) -> a : (x b (@ y))

	let ((x y) (@ j)) m (@ b) -> (x : (let j m (@ b))) y
	let () m (@ b) -> m (@ b)

loop:

	n-zero-p 0 -> x : (y : x)
	n-zero-p x -> x : (y : y) | $atom x

	n-succ x -> y | $add x 1 y

	n-pred 0 -> 0
	n-pred x -> y | $add y 1 x

	n-add a -> (n-add-b a)
	n-add a b -> (n-add-b a) b
	(n-add-b a) b -> c | $add a b c

	n-mul a -> (n-mul-b a)
	n-mul a b -> (n-mul-b a) b
	(n-mul-b a) b -> c | $mul a b c

end:

	x : y -> Î» x y
